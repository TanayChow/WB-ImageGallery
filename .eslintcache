[{"/Users/tanchow/Downloads/ProgrammingPractive/Angular/wavebreak-photo-gallery-code/src/index.js":"1","/Users/tanchow/Downloads/ProgrammingPractive/Angular/wavebreak-photo-gallery-code/src/App.js":"2","/Users/tanchow/Downloads/ProgrammingPractive/Angular/wavebreak-photo-gallery-code/src/reportWebVitals.js":"3","/Users/tanchow/Downloads/ProgrammingPractive/Angular/wavebreak-photo-gallery-code/src/containers/ImageFetch.js":"4","/Users/tanchow/Downloads/ProgrammingPractive/Angular/wavebreak-photo-gallery-code/src/axios-api.js":"5","/Users/tanchow/Downloads/ProgrammingPractive/Angular/wavebreak-photo-gallery-code/src/service/ImageFetchService.js":"6","/Users/tanchow/Downloads/ProgrammingPractive/Angular/wavebreak-photo-gallery-code/src/containers/ImageDetails.js":"7","/Users/tanchow/Downloads/ProgrammingPractive/Angular/wavebreak-photo-gallery-code/src/components/GridView.js":"8"},{"size":500,"mtime":1608582976162,"results":"9","hashOfConfig":"10"},{"size":439,"mtime":1609098436416,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1608582976210,"results":"12","hashOfConfig":"10"},{"size":2629,"mtime":1609615540969,"results":"13","hashOfConfig":"10"},{"size":357,"mtime":1608841572495,"results":"14","hashOfConfig":"10"},{"size":468,"mtime":1609167210148,"results":"15","hashOfConfig":"10"},{"size":2594,"mtime":1609167279778,"results":"16","hashOfConfig":"10"},{"size":1956,"mtime":1609615584319,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1lvbru1",{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"20"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/tanchow/Downloads/ProgrammingPractive/Angular/wavebreak-photo-gallery-code/src/index.js",[],["38","39"],"/Users/tanchow/Downloads/ProgrammingPractive/Angular/wavebreak-photo-gallery-code/src/App.js",["40"],"import './App.css';\nimport ImageFetch from './containers/ImageFetch';\nimport ImageDetails from './containers/ImageDetails';\nimport {BrowserRouter, Switch, Route} from 'react-router-dom' ;\n\nfunction App() {\n  return (\n    <div className=\"App\">\n    <BrowserRouter>\n\n      <Route path=\"/\" exact component={ImageFetch} />\n      <Route path=\"/:id\" exact component={ImageDetails} />\n\n    </BrowserRouter> \n    </div>\n  );\n}\n\nexport default App;\n","/Users/tanchow/Downloads/ProgrammingPractive/Angular/wavebreak-photo-gallery-code/src/reportWebVitals.js",[],"/Users/tanchow/Downloads/ProgrammingPractive/Angular/wavebreak-photo-gallery-code/src/containers/ImageFetch.js",["41","42"],"import React, { Component } from 'react';\nimport axios from '../axios-api';\nimport ImageFetchService from '../service/ImageFetchService';\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport GridView from '../components/GridView';\n\n/** Container for page wise image fetch and display \n * - Contains the local state which is updated and passed to the ImageGallery UI component \n * - Pixabay API request using ImageFetchService methods\n * - material-ui pagination component to support paged view (6 items per page)\n **/\nclass ImageFetch extends Component {\n    state = {\n        images: [],\n        searchTitle: '',\n        page: 1,\n        pageSize: 6,\n        error: false\n    }\n\n    mystyle = {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center'\n      };\n\n    componentDidMount () {\n        // console.log(this.props);\n        this.getImages();\n    }\n\n    /* API request for images */\n    getImages() {\n        const { searchTitle, page, pageSize } = this.state;\n        const params = this.getRequestParams('cars', page, pageSize);\n        ImageFetchService.getAll(params)\n            .then( response => {\n                this.setState( { images: response.data.hits } );\n            } )\n            .catch( error => {\n                console.log('ERROR')\n                this.setState( { error: true } );\n            } );\n    }\n\n    /* Construct API request params */\n    getRequestParams(searchTitle, page, pageSize) {\n        let params = {};\n\n        if (searchTitle) {\n        params[\"q\"] = searchTitle;\n        }\n\n        if (page) {\n        params[\"page\"] = page;\n        }\n\n        if (pageSize) {\n        params[\"per_page\"] = pageSize;\n        }\n\n        return params;\n    }\n\n    /* Handle pagination events */\n    handlePageChange = (event, value) => {\n        console.log(value);\n        this.setState(\n          {\n            page: value,\n          }, () => {\n            this.getImages();\n          }\n        );\n\n      }\n\n    /* Navigate to Image detail view */\n    getImageInfo = (id) => {\n        // console.log('getting image details' + this.props);\n        this.props.history.push('/' + id);\n    }\n\n    render () {\n        console.log(this.state.images)\n\n        return (\n            <div >\n            <GridView images={this.state.images} onImageInfoClicked={this.getImageInfo}></GridView>\n            <div style={this.mystyle}>\n            <Pagination count={6} page={this.state.page} variant=\"outlined\" shape=\"rounded\" onChange={this.handlePageChange}/>\n            </div>                        \n            </div>\n        );\n    }\n}\n\nexport default ImageFetch;","/Users/tanchow/Downloads/ProgrammingPractive/Angular/wavebreak-photo-gallery-code/src/axios-api.js",[],"/Users/tanchow/Downloads/ProgrammingPractive/Angular/wavebreak-photo-gallery-code/src/service/ImageFetchService.js",[],"/Users/tanchow/Downloads/ProgrammingPractive/Angular/wavebreak-photo-gallery-code/src/containers/ImageDetails.js",["43"],"\nimport React, {Component} from 'react';\nimport ImageFetchService from './../service/ImageFetchService';\nimport { Button } from '@material-ui/core';\nimport ThumbUpAltIcon from '@material-ui/icons/ThumbUpAlt';\nimport DownloadIcon from '@material-ui/icons/GetApp';\nimport { Icon, Typography } from '@material-ui/core';\nimport Paper from '@material-ui/core/Paper';\nimport ViewsIcon from '@material-ui/icons/Visibility';\nimport CommentsIcon from '@material-ui/icons/ChatBubble';\n\n/** Container for image details fetch and display\n * - Contains the local state which is updated with image metadata  \n * - Pixabay API used to fetch details for image using @id \n **/\nclass ImageDetails extends Component {\n    state = {\n        img: []\n    }\n\n    componentDidMount () {\n        console.log(this.props);\n        this.getImageDetails();\n    }\n\n    /** Get the image details for the particular image using @id param\n     * - @id extracted from the router props\n     * - ImageFetchService used to make API request \n    */\n    getImageDetails() {\n        const params = {id: this.props.match.params.id}\n        ImageFetchService.getImageDetails(params)\n            .then( response => {\n                // console.log('Image details' + response.data.hits[0])\n                this.setState( { img: response.data.hits[0] } );\n            } )\n            .catch( error => {\n                console.log('ERROR')\n                // this.setState( { error: true } );\n            } );\n    }\n\n    /** Handle back navigation to the home page */\n    onBack = () => {\n        console.log(this.props);\n        this.props.history.push('/');\n    }\n\n    render() {\n        return (\n            <div>\n                <img src={this.state.img.webformatURL} alt={this.state.img.tags} /> \n                <Paper variant=\"outlined\" square>\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\"> <ViewsIcon fontSize=\"small\"/> {this.state.img.views} </Typography>\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\"> <DownloadIcon fontSize=\"small\"/> {this.state.img.views} </Typography>\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\"> <span> <ThumbUpAltIcon fontSize=\"small\"/>  {this.state.img.likes}</span> </Typography>\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\"> <CommentsIcon fontSize=\"small\"/> {this.state.img.likes} </Typography>\n                </Paper>\n                <Button color=\"primary\" onClick={this.onBack}> BACK </Button>\n            </div>\n        )\n    }\n}\n\nexport default ImageDetails;","/Users/tanchow/Downloads/ProgrammingPractive/Angular/wavebreak-photo-gallery-code/src/components/GridView.js",["44"],{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":4,"column":24,"nodeType":"51","messageId":"52","endLine":4,"endColumn":30},{"ruleId":"49","severity":1,"message":"53","line":2,"column":8,"nodeType":"51","messageId":"52","endLine":2,"endColumn":13},{"ruleId":"49","severity":1,"message":"54","line":34,"column":17,"nodeType":"51","messageId":"52","endLine":34,"endColumn":28},{"ruleId":"49","severity":1,"message":"55","line":7,"column":10,"nodeType":"51","messageId":"52","endLine":7,"endColumn":14},{"ruleId":"49","severity":1,"message":"56","line":2,"column":8,"nodeType":"51","messageId":"52","endLine":2,"endColumn":15},"no-native-reassign",["57"],"no-negated-in-lhs",["58"],"no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","'axios' is defined but never used.","'searchTitle' is assigned a value but never used.","'Icon' is defined but never used.","'classes' is defined but never used.","no-global-assign","no-unsafe-negation"]